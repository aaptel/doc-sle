<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="klp.xml" version="5.0" xml:id="cha-klp" xml:lang="en">
 <title>Kernel Live Patching com KLP</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>sim</dm:translation>
  </dm:docmanager>
  <abstract>
   <para>
    Este documento descreve os princípios básicos da tecnologia Kernel Live Patching (KLP) e apresenta as diretrizes de uso para o serviço SLE Live Patching.
   </para>
  </abstract>
 </info>
 <para>
  O KLP é uma tecnologia de aplicação de patches ativa para correção em tempo de execução do kernel do Linux, sem o interromper. Esse procedimento maximiza o tempo ativo do sistema e, consequentemente, sua disponibilidade, o que é essencial para sistemas de extrema importância. Ao permitir a aplicação de patches ativa do kernel, a tecnologia também incentiva os usuários a instalar atualizações críticas de segurança sem aumentar o tempo de espera programado deles.
 </para>
 <para>
   A habilitação do KLP não requer etapas especiais além da habilitação do serviço Live Patching e da aplicação dos patches à medida que são disponibilizados. O serviço faz parte do sistema de gerenciamento de software normal, e os patches são instalados (ou removidos) com as ferramentas de gerenciamento de pacote comuns. Não é necessário instalar ou selecionar manualmente kernels especiais.
</para>
 <para>
  O patch KLP é um módulo do kernel criado para substituir funções inteiras no kernel. Basicamente, o Kernel Live Patching oferece uma infraestrutura no kernel para integração do código corrigido com o código base do kernel em tempo de execução.
 </para>
 <para>
  As informações contidas neste documento são relacionadas às arquiteturas AMD64/Intel 64 e POWER. O KLP é suportado no hipervisor Xen.
 </para>
 <sect1 xml:id="sec-klp-advantages">
  <title>Vantagens do Kernel Live Patching</title>

  <para>
   O Kernel Live Patching com KLP tem como objetivo uma rápida resposta à emergência, quando vulnerabilidades graves ou problemas de estabilidade do sistema são conhecidos e devem ser corrigidos o quanto antes. Ele não é usado para atualizações programadas quando não há urgência.
  </para>

  <para>
   Os casos de uso mais comuns do Kernel Live Patching incluem sistemas como bancos de dados de memória, com enormes quantidades de RAM (quando tempos de inicialização de 15 minutos ou mais são comuns), grandes simulações que precisam de semanas ou meses sem uma reinicialização ou blocos estruturais de infraestrutura que fornecem serviço contínuo a vários clientes.
  </para>

  <para>
   A principal vantagem do Kernel Live Patching é que ele nunca exige interrupção do kernel, nem mesmo por um curto período de tempo.
  </para>

  <para>
   Um patch do KLP é um módulo do kernel <filename>.ko</filename> em um pacote RPM. Ele é inserido no kernel por meio do comando <command>insmod</command> quando o pacote é instalado ou atualizado. O Kernel Live Patching substitui funções inteiras no kernel, mesmo se estiverem em execução. Um módulo atualizado do KLP poderá substituir um patch existente, se necessário.
  </para>

  <para>
   O Kernel Live Patching também é compacto, ele inclui apenas uma pequena quantidade de código, pois aproveita outras tecnologias padrão do Linux.
  </para>
 </sect1>
 <sect1 xml:id="sec-klp-low-level">
  <title>Função de nível inferior do Kernel Live Patching</title>

  <para>
   O Kernel Live Patching usa a infraestrutura do ftrace para executar a aplicação de patches. Veja a seguir a descrição da implementação na arquitetura AMD64/Intel 64.
  </para>

  <para>
   Para corrigir uma função do kernel, o Kernel Live Patching precisa de algum espaço no começo da função para inserir um salto para uma nova função. Esse espaço é alocado pelo GCC durante a compilação do kernel, com a criação de perfil da função ativada. Em particular, uma instrução de chamada de 5 bytes é inserida no começo das funções do kernel. Durante a inicialização desse kernel de originação de dados de registro, as chamadas de criação de perfil são substituídas pelas instruções NOP (nenhuma operação) de 5 bytes.
  </para>

  <para>
   Após o início da correção, o primeiro byte será substituído pela instrução INT3 (ponto de interrupção). Isso garante a atomicidade da substituição da instrução de 5 bytes. Os outros quatro bytes são substituídos pelo endereço da nova função. Por fim, o primeiro byte é substituído pelo código da operação JMP (salto longo).
  </para>

  <para>
   As interrupções não mascaráveis do interprocessador (IPI NMI) são usadas durante todo o processo para descarregar filas de decodificações especulativas de outras CPUs no sistema. Dessa forma, é possível alternar para a nova função sem ter que interromper o kernel, nem mesmo por um período bem curto. As interrupções por IPI NMIs podem ser medidas em microssegundos e não são consideradas interrupções de serviço, já que ocorrem enquanto o kernel é executado em qualquer caso.
  </para>

  <para>
   Os chamadores nunca são corrigidos. Em vez disso, as NOPs do receptor são substituídas por um JMP para a nova função. As instruções JMP sempre permanecem. Esse procedimento se encarrega dos ponteiros de função, inclusive em estruturas, e não requer gravação de dados antigos para a possibilidade de reversão da correção.
  </para>

  <para>
   Porém, essas etapas sozinhas não são suficientes: como as funções são substituídas de maneira não atômica, uma nova função corrigida em uma parte do kernel ainda pode chamar uma função antiga em algum outro lugar, ou vice-versa. Se a semântica da função encontrar alguma mudança no patch, será um caos.
  </para>

  <para>
   Portanto, até todas as funções serem substituídas, o Kernel Live Patching usará uma abordagem baseada em trampolins e semelhante a ler-copiar-atualizar (RCU, Read-Copy-Update) para garantir uma visão consistente do mundo a cada thread do espaço do usuário, thread do kernel e interrupção do kernel. Um flag por thread é definido em cada entrada e saída do kernel. Dessa forma, uma função antiga sempre chama outra função antiga, e uma nova função sempre chama outra nova. Depois que todos os processos tiverem o flag de "novo universo" definido, a correção será concluída, os trampolins poderão ser removidos e o código poderá operar em velocidade máxima sem afetar o desempenho, exceto pelo salto extra longo para cada função corrigida.
  </para>
 </sect1>

  <sect1 xml:id="sec-klp-install-patch-activate">
   <title>Ativação do SLE Live Patching</title>
   <para>
    Para ativar o SLE Live Patching no sistema, siga estas etapas:
   </para>
   <procedure>
    <step>
     <para>
      Seu sistema SLES deve ser registrado. Registre seu sistema durante a instalação dele ou após a instalação com o módulo <guimenu>Registro de Produto</guimenu> do YaST (<command>yast2 registration</command>). Se o seu sistema SLES já foi registrado, mas o SLE Live Patching ainda não foi ativado, execute o comando <command>yast2 registration</command> e clique em <guimenu>Selecionar extensões</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Selecione <guimenu>SUSE Linux Enterprise Live Patching 15</guimenu> na lista de extensões disponíveis e clique em <guimenu>Próximo</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Confirme os termos da licença e clique em <guimenu>Próximo</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Digite o código de registro do SLE Live Patching e clique em <guimenu>Próximo</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Confira o <guimenu>Resumo da Instalação</guimenu> e os <guimenu>Padrões</guimenu> selecionados. Os padrões <systemitem>Live Patching</systemitem> e <systemitem>SLE Live Patching Lifecycle Data</systemitem> devem estar automaticamente selecionados para instalação, e pode haver outros pacotes para atender às dependências. 
     </para>
    </step>
    <step>
     <para>
      Clique em <guimenu>Aceitar</guimenu> para concluir a instalação. Isso instalará os componentes base do Kernel Live Patching no sistema, o patch ativo inicial e quaisquer dependências.
     </para>
    </step>
   </procedure>
  </sect1>

  <sect1 xml:id="sec-klp-install-patch-update">
   <title>Instalando e removendo patches</title>
   <para>
       Esta seção descreve como localizar, instalar e remover patches do KLP.
   </para>
     <sect2 xml:id="sec-klp-install">
  <title>Instalando um patch do KLP</title>
     
   <procedure>
    <step>
     <para>
      Antes de instalar novos patches, execute o comando <command>klp status</command> para consultar o status atual, que deve ser <literal>ready</literal> e não <literal>in_progress</literal>. Não é possível aplicar novos patches antes de concluir as instalações dos patches anteriores. As invocações das funções antigas do kernel não são completamente eliminadas antes do acionamento e da eliminação de todos os processos adormecidos. Isso pode levar um tempo bastante considerável. Os processos adormecidos que usam funções antigas do kernel não são considerados um problema de segurança. (Consulte a <xref linkend="sec-klp-exec-threads"/> para obter informações sobre como gerenciar estados <literal>in_progress</literal> prolongados.)
     </para>     
     </step>
    <step>
     <para>
         Use o sistema de gerenciamento de pacote normal <command>zypper</command> ou o YaST para ver e instalar os patches disponíveis. O exemplo a seguir pesquisa os patches disponíveis e, em seguida, instala o patch mais recente. Não é necessário instalar todos os patches na ordem. Quando há vários patches disponíveis, instale o mais recente.
     </para>
     <screen><prompt>tux &gt; </prompt><command>sudo</command> zypper se kernel-livepatch 
| kernel-livepatch-5_3_18-8_16-default  | Kernel live patch module  | package   
| kernel-livepatch-5_3_18-8_19-default  | Kernel live patch module  | package   
| kernel-livepatch-5_3_18-8_22-default  | Kernel live patch module  | package

<prompt>tux &gt; </prompt><command>sudo</command> zypper in kernel-livepatch-5_3_18-8_22-default</screen>     
    </step>
   </procedure>
  </sect2>
 
  <sect2 xml:id="sec-klp-remove">
  <title>Removendo um patch do KLP</title>
  <para>
      Se você precisa remover um patch do KLP, use o <command>zypper</command> exatamente como faz com qualquer outro pacote. Liste os pacotes de patch ativo instalados usando o <command>zypper</command> para pesquisar por <literal>kernel-livepatch</literal>:
  </para>
     <screen><prompt>tux &gt; </prompt><command>sudo</command> zypper se -kernel-livepatch 
  | kernel-livepatch-5_3_18-8_16-default  | Kernel live patch module  | package   
  | kernel-livepatch-5_3_18-8_19-default  | Kernel live patch module  | package   
i | kernel-livepatch-5_3_18-8_22-default  | Kernel live patch module  | package
</screen>
  <procedure>
   <step>
    <para>
     Remova o patch usando o <command>zypper</command>:
    </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> zypper rm kernel-livepatch-5_3_18-8_22-default</screen>
   </step>
   <step>
    <para>
     Aguarde a recriação automática do <systemitem>initrd</systemitem> e, em seguida, reinicialize a máquina.
    </para>
   </step>
  </procedure>
</sect2>
 </sect1>
 
  <sect1 xml:id="sec-klp-klp">
  <title>A ferramenta <command>klp</command></title>

  <para>
   É possível simplificar várias tarefas de gerenciamento do Kernel Live Patching com a ferramenta <command>klp</command>. Os comandos disponíveis são:
  </para>

  <variablelist>
   <varlistentry>
    <term><command>klp status</command></term>
    <listitem>
     <para>
      Exibe o status geral do Kernel Live Patching (<literal>ready</literal> ou <literal>in_progress</literal>).
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>klp patches</command></term>
    <listitem>
     <para>
      Exibe a lista de patches carregados do KLP.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>klp blocking</command></term>
    <listitem>
     <para>
      Lista os processos que impedem a finalização do Kernel Live Patching. Por padrão, apenas os PIDs são listados. A especificação de <option>-v</option> imprimirá as linhas de comando, se disponíveis. <option>-vv</option> exibe os rastreamentos de pilha.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
  <para>
   Para obter informações detalhadas, consulte <command>man klp</command>.
  </para>
 </sect1>

 <sect1 xml:id="sec-klp-exec-threads">
  <title>Threads de execução do kernel travados</title>

  <para>
   Os threads do kernel devem ser preparados para executar o Kernel Live Patching. Softwares de terceiros talvez não suportem o Kernel Live Patching e podem gerar threads de execução do kernel. Esses threads bloqueiam o processo de correção indefinidamente. Como medida de emergência, você pode escrever <literal>0</literal> no <filename>/sys/kernel/livepatch/*/transition/</filename> (substituindo o caractere curinga asterisco pelo nome do seu arquivo) para forçar a conclusão do processo de aplicação de patches sem esperar até que todos os threads de execução ultrapassem o ponto de verificação de segurança. Contate o suporte da SUSE antes de executar esse procedimento.
  </para>
</sect1>

 <sect1 xml:id="sec-klp-lifecycle">
  <title>Ciclo de vida do patch</title>

  <para>
   É possível acessar as datas de vencimento dos patches ativos com o comando <command>zypper lifecycle</command>. (Verifique se o pacote
   <package>lifecycle-data-sle-module-live-patching</package> está instalado.)
  </para>

  <para>
   Quando a data de vencimento de um patch é atingida, nenhum outro patch ativo para esta versão do kernel é fornecido. Planeje uma atualização do kernel antes do fim do período do ciclo de vida do patch ativo.
  </para>

  <para>
   Para obter detalhes sobre o <command>ciclo de vida do zypper</command>, consulte <emphasis>Mostrando informações sobre o ciclo de vida</emphasis> no <emphasis>Guia de Administração</emphasis>.
  </para>
 </sect1>

 <sect1 xml:id="sec-klp-scope">
  <title>Escopo da tecnologia Kernel Live Patching</title>

  <para>
   O Kernel Live Patching baseia-se em substituir funções. É possível realizar a alteração da estrutura de dados apenas indiretamente com o Kernel Live Patching. Como resultado, as mudanças na estrutura de dados do kernel exigem cuidado especial e, se a mudança for muito extensa, talvez seja necessária a reinicialização. O Kernel Live Patching talvez não possa também lidar com situações em que um compilador é usado para compilar o kernel antigo, e outro compilador é usado para compilar o patch.
  </para>

  <para>
   Por causa da maneira como o Kernel Live Patching funciona, o suporte a módulos de terceiros que geram threads do kernel é limitado.

  </para>
 </sect1>
 <sect1 xml:id="sec-klp-scope-patching">
  <title>Escopo do SLE Live Patching</title>

  <para>
   Correções de vulnerabilidades de nível 7+ para SUSE Common Vulnerability Scoring System (CVSS; o SUSE CVSS está baseado no sistema CVSS v3.0) e correções de bug relacionadas à estabilidade ou corrupção de dados do sistema serão incluídas no escopo do SLE Live Patching. Talvez não seja possível produzir um patch ativo para todos os tipos de correções que englobem os critérios acima. A SUSE reserva-se o direito de ignorar as correções nas quais a produção de um patch ativo do kernel seja inviável por questões técnicas. Para obter mais informações sobre CVSS, que é a base para a classificação CVSS do SUSE, consulte <link xlink:href="https://www.first.org/cvss/"/>.
  </para>
 </sect1>
 <sect1 xml:id="sec-klp-support-interaction">
  <title>Interação com os processos de suporte</title>

  <para>
   Durante a resolução de uma dificuldade técnica com o suporte da SUSE, você pode receber uma Correção Temporária do Programa (PTF, Program Temporary Fix). As PTFs podem ser emitidas para vários pacotes, incluindo os que constituem a base do SLE Live Patching.
  </para>

  <para>
   As PTFs do Kernel Live Patching que cumprirem as condições descritas na seção anterior poderão ser instaladas como de costume, e a SUSE garantirá que o sistema em questão não tenha de ser reinicializado e que as live updates futuras sejam corretamente aplicadas.
  </para>

  <para>
   As PTFs emitidas para o kernel base interrompem o processo de correção ativa. Em primeiro lugar, a instalação do kernel da PTF requer reinicialização, já que o kernel não pode ser substituído integralmente em tempo de execução. Em segundo lugar, uma outra reinicialização é necessária para substituir a PTF por qualquer atualização de manutenção regular para a qual os patches ativos são emitidos.
  </para>

  <para>
   As PTFs para outros pacotes no SLE Live Patching podem ser tratadas como PTFs regulares com as garantias comuns.
  </para>
 </sect1>
</chapter>
